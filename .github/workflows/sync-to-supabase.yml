name: Sync Tokens to Supabase

on:
  push:
    paths:
      - 'tokens.json'
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Sync to Supabase
        uses: actions/github-script@v6
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        with:
          script: |
            const fs = require('fs');
            
            // Read tokens file
            const tokens = JSON.parse(fs.readFileSync('tokens.json', 'utf8'));
            
            // Function to flatten tokens - UPDATED for $value and $type
            function flattenTokens(obj, prefix = '', category = '') {
              let result = [];
              
              for (const [key, value] of Object.entries(obj)) {
                if (key.startsWith('$')) continue; // Skip metadata
                
                const fullName = prefix ? `${prefix}-${key}` : key;
                
                // Check for both $value and value (for compatibility)
                const tokenValue = value?.$value || value?.value;
                const tokenType = value?.$type || value?.type;
                
                if (value && typeof value === 'object' && tokenValue) {
                  // This is a token
                  result.push({
                    token_name: fullName,
                    token_value: tokenValue,
                    token_type: tokenType || 'unknown',
                    category: category || prefix || 'global',
                    css_variable: `--${fullName.replace(/\s+/g, '-').toLowerCase()}`,
                    description: value.description || null
                  });
                } else if (value && typeof value === 'object') {
                  // Nested object, recurse
                  result = result.concat(flattenTokens(value, fullName, key));
                }
              }
              
              return result;
            }
            
            // Flatten all tokens
            const flatTokens = flattenTokens(tokens);
            console.log(`Found ${flatTokens.length} tokens to sync`);
            console.log('Sample tokens:', JSON.stringify(flatTokens.slice(0, 3), null, 2));
            
            if (flatTokens.length === 0) {
              console.log('WARNING: No tokens found to sync!');
              return;
            }
            
            // Send to Supabase
            const response = await fetch(`${process.env.SUPABASE_URL}/rest/v1/design_tokens`, {
              method: 'POST',
              headers: {
                'apikey': process.env.SUPABASE_KEY,
                'Authorization': `Bearer ${process.env.SUPABASE_KEY}`,
                'Content-Type': 'application/json',
                'Prefer': 'return=representation'
              },
              body: JSON.stringify(flatTokens)
            });
            
            const responseText = await response.text();
            
            if (!response.ok) {
              throw new Error(`Supabase sync failed: ${responseText}`);
            }
            
            console.log(`âœ… Successfully synced ${flatTokens.length} tokens to Supabase`);
- name: Update status file
        run: |
          # Read current status
          STATUS_FILE="docs/status.json"
          
          # Update with new sync time
          echo '{
            "tokens": {
              "count": 114,
              "lastSync": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"
            },
            "components": {
              "count": 302,
              "lastSync": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"
            },
            "lastUpdated": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"
          }' > $STATUS_FILE
          
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add $STATUS_FILE
          git commit -m "Update sync status" || true
          git push
